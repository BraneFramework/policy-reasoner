// WORKFLOW BASE.eflint
//   by Lut99
//
// Created:
//   30 Nov 2023, 11:14:15
// Last edited:
//   07 Dec 2023, 13:32:48
// Auto updated?
//   Yes
//
// Description:
//   Defines the `Fact`s that we use to express a Checker Workflow in.
//

#require "state.eflint".


///// DEFINITIONS /////
// Declares a particular workflow.
Fact workflow.
// Defines a dataset that is the product of this workflow.
Fact workflow-result Identified by workflow * asset.
// Names a dataset that is received by the submitter of the workflow.
Fact workflow-result-recipient Identified by workflow-result * user.

// Declares a node in a workflow, which is either an executable `task` or the publication of a dataset (`commit`). Given as a pair of a workflow and the node ID, as it models a call to something and that's always in the context of a particular workflow.
Fact node Identified by workflow * string.
// Relates _data_ as _possible_ input to a node. Whether this data is actually given as input depends on dynamic control flow. See `node-input-ensured` to find out which inputs are given in \*all\* control flow paths.
Fact node-input Identified by node * asset.
// Relates an input to a domain where it will be downloaded from. Can be at most 1.
Fact node-input-from Identified by node-input * domain.
// Relates asset as output to a node. Can be at most 1.
Fact node-output Identified by node * asset.
// Defines where a particular node is executed. Can be at most 1.
Fact node-at Identified by node * domain.

// Declares a particular call of a function.
Fact task Identified by node.
// Determines that a particular input asset acts as the code for that asset. Given as the input and the name of the function to call in that input.
Fact function Identified by node-input * string.

// Declares the publication of a particular dataset.
Fact commit Identified by node.

// Declares a node that is a stand-in for a subgraph that is repeatedly executed.
// 
// The input of the loop acts as the input of the `loop-body`'s first node, and the output corresponds to the output of the `loop-body`'s last node(s).
Fact loop Identified by node.
// Links a `loop` node to the body that is repeatedly executed.
Fact loop-body Identified by loop * node.
