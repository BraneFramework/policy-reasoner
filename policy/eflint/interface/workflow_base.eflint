// WORKFLOW BASE.eflint
//   by Lut99
//
// Created:
//   30 Nov 2023, 11:14:15
// Last edited:
//   30 Nov 2023, 13:59:54
// Auto updated?
//   Yes
//
// Description:
//   Defines the `Fact`s that we use to express a Checker Workflow in.
//

#require "state.eflint".


// Declares a particular workflow.
Fact workflow.
// Defines a dataset that is the product of this workflow.
Fact workflow-result Identified by workflow * asset.
// Names a dataset that is received by the submitter of the workflow.
Fact workflow-result-recipient Identified by workflow-result * user.

// Declares a node in a workflow, which is either an executable `task` or the publication of a dataset (`commit`). Given as a pair of a workflow and the node ID, as it models a call to something and that's always in the context of a particular workflow.
Fact node Identified by workflow * string.
// Relates _data_ as _possible_ input to a node. Whether this data is actually given as input depends on dynamic control flow. See `node-input-ensured` to find out which inputs are given in \*all\* control flow paths.
Fact node-input Identified by node * asset.
// A predicate over `node-input` that denotes it isn't a possible input dataset, but an ensured input dataset. Note that, for `commit`s, this can be at most 1, correctly implying `commit` can only commit a single dataset.
Fact node-input-ensured Identified by node-input.
// Relates _data_ as output to a node. Can be at most 1.
Fact node-output Identified by node * asset.

// Declares a particular call of a function.
Fact task Identified by node.
// Relates _code_ as what is being executed in a task. Can be at most 1.
Fact task-code Identified by task * code.
// Defines where a particular task is executed. Can be at most 1.
Fact task-at Identified by task * domain.

// Declares the publication of a particular dataset.
Fact commit Identified by node.
