{
  "version": "0.1.0",
  "kind": "phrases",
  "phrases": [
    {
      "kind": "afact",
      "name": "user",
      "type": "String"
    },
    {
      "kind": "cfact",
      "name": "domain",
      "identified-by": [
        "user"
      ]
    },
    {
      "kind": "afact",
      "name": "asset",
      "type": "String"
    },
    {
      "kind": "cfact",
      "name": "asset-access",
      "identified-by": [
        "asset",
        "user"
      ]
    },
    {
      "kind": "cfact",
      "name": "code",
      "identified-by": [
        "asset"
      ]
    },
    {
      "kind": "afact",
      "name": "workflow",
      "type": "String"
    },
    {
      "kind": "cfact",
      "name": "workflow-result",
      "identified-by": [
        "workflow",
        "asset"
      ]
    },
    {
      "kind": "cfact",
      "name": "workflow-result-recipient",
      "identified-by": [
        "workflow-result",
        "user"
      ]
    },
    {
      "kind": "cfact",
      "name": "node",
      "identified-by": [
        "workflow",
        "string"
      ]
    },
    {
      "kind": "cfact",
      "name": "node-input",
      "identified-by": [
        "node",
        "asset"
      ]
    },
    {
      "kind": "cfact",
      "name": "node-input-ensured",
      "identified-by": [
        "node-input"
      ]
    },
    {
      "kind": "cfact",
      "name": "node-output",
      "identified-by": [
        "node",
        "asset"
      ]
    },
    {
      "kind": "cfact",
      "name": "link",
      "identified-by": [
        "node-output",
        "node-input"
      ]
    },
    {
      "kind": "cfact",
      "name": "link-branch",
      "identified-by": [
        "node-output",
        "node-input"
      ]
    },
    {
      "kind": "cfact",
      "name": "task",
      "identified-by": [
        "node"
      ]
    },
    {
      "kind": "cfact",
      "name": "task-code",
      "identified-by": [
        "task",
        "code"
      ]
    },
    {
      "kind": "cfact",
      "name": "task-at",
      "identified-by": [
        "task",
        "domain"
      ]
    },
    {
      "kind": "cfact",
      "name": "commit",
      "identified-by": [
        "node"
      ]
    },
    {
      "kind": "cfact",
      "name": "signature",
      "identified-by": [
        "user",
        "string"
      ]
    },
    {
      "kind": "cfact",
      "name": "signature-valid",
      "identified-by": [
        "signature"
      ]
    },
    {
      "kind": "cfact",
      "name": "tag",
      "identified-by": [
        "user",
        "string"
      ]
    },
    {
      "kind": "cfact",
      "name": "metadata",
      "identified-by": [
        "tag",
        "signature"
      ]
    },
    {
      "kind": "cfact",
      "name": "workflow-metadata",
      "identified-by": [
        "workflow",
        "metadata"
      ]
    },
    {
      "kind": "cfact",
      "name": "node-metadata",
      "identified-by": [
        "node",
        "metadata"
      ]
    },
    {
      "kind": "cfact",
      "name": "asset-metadata",
      "identified-by": [
        "asset",
        "metadata"
      ]
    },
    {
      "kind": "cfact",
      "name": "user-metadata",
      "identified-by": [
        "user",
        "metadata"
      ]
    },
    {
      "kind": "predicate",
      "is-invariant": true,
      "name": "workflow-at-most-one-result-recipient",
      "expression": {
        "iterator": "FORALL",
        "binds": [
          "workflow"
        ],
        "expression": {
          "operator": "LTE",
          "operands": [
            {
              "operator": "COUNT",
              "operands": [
                {
                  "iterator": "FOREACH",
                  "binds": [
                    "asset",
                    "user"
                  ],
                  "expression": {
                    "operator": "WHEN",
                    "operands": [
                      {
                        "identifier": "workflow-result-recipient",
                        "operands": [
                          {
                            "identifier": "workflow-result",
                            "operands": [
                              [
                                "workflow"
                              ],
                              [
                                "asset"
                              ]
                            ]
                          },
                          [
                            "user"
                          ]
                        ]
                      },
                      {
                        "operator": "HOLDS",
                        "operands": [
                          {
                            "identifier": "workflow-result-recipient",
                            "operands": [
                              {
                                "identifier": "workflow-result",
                                "operands": [
                                  [
                                    "workflow"
                                  ],
                                  [
                                    "asset"
                                  ]
                                ]
                              },
                              [
                                "user"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            1
          ]
        }
      }
    },
    {
      "kind": "predicate",
      "is-invariant": true,
      "name": "node-at-most-one-output",
      "expression": {
        "iterator": "FORALL",
        "binds": [
          "node"
        ],
        "expression": {
          "operator": "LTE",
          "operands": [
            {
              "operator": "COUNT",
              "operands": [
                {
                  "iterator": "FOREACH",
                  "binds": [
                    "asset"
                  ],
                  "expression": {
                    "operator": "WHEN",
                    "operands": [
                      {
                        "identifier": "node-output",
                        "operands": [
                          [
                            "node"
                          ],
                          [
                            "asset"
                          ]
                        ]
                      },
                      {
                        "operator": "HOLDS",
                        "operands": [
                          {
                            "identifier": "node-output",
                            "operands": [
                              [
                                "node"
                              ],
                              [
                                "asset"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            1
          ]
        }
      }
    },
    {
      "kind": "predicate",
      "is-invariant": true,
      "name": "task-at-most-one-code",
      "expression": {
        "iterator": "FORALL",
        "binds": [
          "task"
        ],
        "expression": {
          "operator": "LTE",
          "operands": [
            {
              "operator": "COUNT",
              "operands": [
                {
                  "iterator": "FOREACH",
                  "binds": [
                    "code"
                  ],
                  "expression": {
                    "operator": "WHEN",
                    "operands": [
                      {
                        "identifier": "task-code",
                        "operands": [
                          [
                            "task"
                          ],
                          [
                            "code"
                          ]
                        ]
                      },
                      {
                        "operator": "HOLDS",
                        "operands": [
                          {
                            "identifier": "task-code",
                            "operands": [
                              [
                                "task"
                              ],
                              [
                                "code"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            1
          ]
        }
      }
    },
    {
      "kind": "predicate",
      "is-invariant": true,
      "name": "task-exactly-one-at",
      "expression": {
        "iterator": "FORALL",
        "binds": [
          "task"
        ],
        "expression": {
          "operator": "EQ",
          "operands": [
            {
              "operator": "COUNT",
              "operands": [
                {
                  "iterator": "FOREACH",
                  "binds": [
                    "domain"
                  ],
                  "expression": {
                    "operator": "WHEN",
                    "operands": [
                      {
                        "identifier": "task-at",
                        "operands": [
                          [
                            "task"
                          ],
                          [
                            "domain"
                          ]
                        ]
                      },
                      {
                        "operator": "HOLDS",
                        "operands": [
                          {
                            "identifier": "task-at",
                            "operands": [
                              [
                                "task"
                              ],
                              [
                                "domain"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            1
          ]
        }
      }
    },
    {
      "kind": "predicate",
      "is-invariant": true,
      "name": "commit-at-most-one-input-ensured",
      "expression": {
        "iterator": "FORALL",
        "binds": [
          "commit"
        ],
        "expression": {
          "operator": "LTE",
          "operands": [
            {
              "operator": "COUNT",
              "operands": [
                {
                  "iterator": "FOREACH",
                  "binds": [
                    "asset"
                  ],
                  "expression": {
                    "operator": "WHEN",
                    "operands": [
                      {
                        "identifier": "node-input-ensure",
                        "operands": [
                          {
                            "parameter": "node",
                            "operand": [
                              "commit"
                            ]
                          },
                          [
                            "asset"
                          ]
                        ]
                      },
                      {
                        "operator": "HOLDS",
                        "operands": [
                          {
                            "identifier": "node-input-ensure",
                            "operands": [
                              {
                                "parameter": "node",
                                "operand": [
                                  "commit"
                                ]
                              },
                              [
                                "asset"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            1
          ]
        }
      }
    }
  ],
  "updates": true
}
